using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using SofttekChallenger.Models;
using SofttekChallenger.Services;

namespace SofttekChallenger.Controllers
{
    [ApiController]
    [Route("api/pacientes")]
    public class PatientsController : ControllerBase
    {
        private readonly IPacienteService _service;

        public PatientsController()
        {
            _service = new PacienteService();
        }

        [Authorize]
        [HttpGet]
        public IActionResult Get([FromQuery] string? nome)
        {
            var pacientes = _service.GetAll(nome);
            return Ok(pacientes);
        }

        [HttpPost]
        public IActionResult Post([FromBody] Patient novoPaciente)
        {
            if (!ModelState.IsValid)
                return BadRequest(ModelState);
            var paciente = _service.Add(novoPaciente);
            return CreatedAtAction(nameof(Get), new { id = paciente.Id }, paciente);
        }

        [HttpGet("/api/legacy/pacientes")]
        public IActionResult GetLegacy()
        {
            var filePath = Path.Combine(Directory.GetCurrentDirectory(), "legacy-patients.json");
            var pacientes = _service.GetFromLegacy(filePath);
            if (pacientes.Count == 0)
                return NotFound("Arquivo legacy-patients.json não encontrado ou vazio.");
            return Ok(pacientes);
        }
    }
}
